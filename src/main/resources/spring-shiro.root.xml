<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


	<!-- 1. 配置 SecurityManager安全管理器! -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref="cacheManager" />

		<property name="realm" ref="jdbcRealm"></property>

		<property name="rememberMeManager.cookie.maxAge" value="10"></property>
	</bean>


	<!-- 2. 配置 CacheManager. 缓存在本机内存，不支持集群 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager">
	</bean>

	<!-- 3. 配置 Realm-->
	<bean id="jdbcRealm" class="com.flower.ssm.controller.ShiroRealm">
		<property name="credentialsMatcher">
			<bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<!-- 加密算法 -->
				<property name="hashAlgorithmName" value="MD5"></property>
				<!-- 加密次数 -->
				<property name="hashIterations" value="1024"></property>
			</bean>
		</property>
	</bean>

	<!-- 4. 配置 LifecycleBeanPostProcessor. 可以自定的来调用配置在 Spring IOC 容器中 shiro 
		bean 的生命周期方法. -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />


	<!-- 5. 启用 IOC 容器中使用 shiro 的注解. 但必须在配置了 LifecycleBeanPostProcessor 之后才可以使用. -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- 6. 配置 ShiroFilter. 
			6.1 id 必须和 web.xml 文件中配置的 DelegatingFilterProxy 的 <filter-name> 一致. 
			若不一致, 则会抛出: NoSuchBeanDefinitionException. 因为 Shiro 会来 
		IOC 容器中查找和 <filter-name> 名字对应的 filter bean. -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/managerLogin.html" />
		<property name="successUrl" value="/list.jsp" /><!-- 只有在登陆成功后，没设置返回页面时在有效 -->
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<!-- 配置哪些页面需要受保护. 以及访问这些页面需要的权限. 
		1). anon 可以被匿名访问
		2). authc 必须认证(即登录)后才可能访问的页面. 
		3). logout 登出. 
		4). roles 角色过滤器 -->

		<property name="filterChainDefinitions">
			<value>
				/managerLogin.html = anon
				/login/managerLogin = anon
				/login.jsp = anon
				/shiro/login = anon
				<!-- /** = authc -->
			</value>
		</property>
	</bean>
</beans>
